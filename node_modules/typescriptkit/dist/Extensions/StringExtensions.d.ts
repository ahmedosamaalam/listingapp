/**
 * Helper Utility for the String class
 */
export declare class StringExtensions {
    /**
     * Check whether a function is null or empty
     * @param stringObject The string to check.
     */
    static isNullOrEmpty(stringObject: string): boolean;
    /**
     * Check whether a function is null or consists of whitespace
     * @param stringObject The string to check.
     */
    static isNullOrWhitespace(stringObject: string): boolean;
    /**
     * Check whether a string starts with a certain character
     * @param stringObject The string to check.
     * @param startChar The character to check.
     */
    static startsWith(stringObject: string, startChar: string): boolean;
    /**
     * Check whether a string ends with a certain character
     * @param stringObject The string to check.
     * @param character The character to check.
     */
    static endsWith(stringObject: string, character: string): boolean;
    /**
     * Trim the given character at the start of the string
     * @param stringObject The string to trim.
     * @param character The character to trim.
     */
    static trimStartCharacters(stringObject: string, character: string): string;
    /**
     * Trim the given character at the end of the string
     * @param stringObject The string to trim.
     * @param character The character to trim.
     */
    static trimEndCharacters(stringObject: string, character: string): string;
    /**
     * Trim the given character at the start and end of the string
     * @param stringObject The string to trim.
     * @param character The character to trim.
     */
    static trimCharacters(stringObject: string, character: string): string;
}
/** Interface to allow extension code completion */
export interface String {
    /**
     * Check whether a function is null or empty
     */
    isNullOrEmpty(): boolean;
    /**
     * Check whether a function is null or consists of whitespace
     */
    isNullOrWhitespace(): boolean;
    /**
     * Check whether a string starts with a certain character
     * @param startChar The character to check.
     */
    startsWith(startChar: string): boolean;
    /**
     * Check whether a string ends with a certain character
     * @param character The character to check.
     */
    endsWith(character: string): boolean;
    /**
     * Trim the given character at the start of the string
     * @param character The character to trim.
     */
    trimStartCharacters(character: string): string;
    /**
     * Trim the given character at the end of the string
     * @param character The character to trim.
     */
    trimEndCharacters(character: string): string;
    /**
     * Trim the given character at the start and end of the string
     * @param character The character to trim.
     */
    trimCharacters(character: string): string;
}
export default StringExtensions;
